; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Object",
"class": "BaseArea",
"language": "GDScript",
"path": "res://scenes/areas/base_area.gd"
}, {
"base": "Node2D",
"class": "BaseRoom",
"language": "GDScript",
"path": "res://scenes/areas/base_room.gd"
}, {
"base": "Node",
"class": "BaseState",
"language": "GDScript",
"path": "res://scenes/player/base_state.gd"
}, {
"base": "BaseState",
"class": "Dash",
"language": "GDScript",
"path": "res://scenes/player/dash.gd"
}, {
"base": "",
"class": "GitAPI",
"language": "NativeScript",
"path": "res://addons/godot-git-plugin/git_api.gdns"
}, {
"base": "BaseState",
"class": "Idle",
"language": "GDScript",
"path": "res://scenes/player/on_ground.gd"
}, {
"base": "BaseState",
"class": "InAir",
"language": "GDScript",
"path": "res://scenes/player/in_air.gd"
}, {
"base": "BaseState",
"class": "Jump",
"language": "GDScript",
"path": "res://scenes/player/jump.gd"
}, {
"base": "KinematicBody2D",
"class": "Player",
"language": "GDScript",
"path": "res://scenes/player/player.gd"
}, {
"base": "Area2D",
"class": "Projectile",
"language": "GDScript",
"path": "res://scenes/projectiles/testprojectile.gd"
}, {
"base": "Node",
"class": "StateMachine",
"language": "GDScript",
"path": "res://scenes/player/state_machine.gd"
} ]
_global_script_class_icons={
"BaseArea": "",
"BaseRoom": "",
"BaseState": "",
"Dash": "",
"GitAPI": "",
"Idle": "",
"InAir": "",
"Jump": "",
"Player": "",
"Projectile": "",
"StateMachine": ""
}

[application]

config/name="Nagzz Community Game"
run/main_scene="res://scenes/menu/menu.tscn"
config/icon="res://icon.png"

[autoload]

PowerupVariantDatabase="*res://scenes/powerup_select/powerup_variant_database.gd"
HealthStats="*res://scenes/player/health_stats.gd"
GameManager="*res://scenes/game_manager.gd"

[display]

window/stretch/mode="2d"

[gdnative]

singletons=[ "res://addons/godot-git-plugin/git_api.gdnlib" ]

[input]

jump={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":32,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":87,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
interact={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":69,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
move_right={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777233,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":68,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
move_left={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":65,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
, Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777231,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
attack={
"deadzone": 0.5,
"events": [ Object(InputEventMouseButton,"resource_local_to_scene":false,"resource_name":"","device":-1,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"button_mask":0,"position":Vector2( 0, 0 ),"global_position":Vector2( 0, 0 ),"factor":1.0,"button_index":1,"pressed":false,"doubleclick":false,"script":null)
 ]
}
debug_powerup={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":92,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
alt_attack={
"deadzone": 0.5,
"events": [ Object(InputEventMouseButton,"resource_local_to_scene":false,"resource_name":"","device":-1,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"button_mask":0,"position":Vector2( 0, 0 ),"global_position":Vector2( 0, 0 ),"factor":1.0,"button_index":2,"pressed":false,"doubleclick":false,"script":null)
 ]
}
reload={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":82,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
pause={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777217,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
dash={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777237,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}

[layer_names]

2d_physics/layer_1="walls"
2d_physics/layer_2="player"
2d_physics/layer_3="npc"

[physics]

common/enable_pause_aware_picking=true

[rendering]

environment/default_environment="res://default_env.tres"
